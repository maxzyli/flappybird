import { BoundingBox, Vector3 } from "@oasis-engine/math";
import { Script } from "../Script";
/**
 * Detect collisions between the Collider on the current entity and other Colliders in the scene.
 */
export declare class CollisionDetection extends Script {
    private static _tempBox1;
    private static _tempBox2;
    private _colliderManager;
    private _myCollider;
    private _overlappedCollider;
    private _sphere;
    private _box;
    /**
     * Constructor of the collision detection.
     * @param entity - Entity to which the collision detection belong
     */
    constructor(entity: any);
    /**
     * The collider that intersects with the collider on the current Entity.
     */
    get overlappedCollider(): any;
    /**
     * When every frame is updated, calculate the collision with other collider.
     */
    onUpdate(deltaTime: any): void;
    /**
     * Calculate the boundingbox in world space from boxCollider.
     * @param boxCollider - The boxCollider to calculate
     * @param out - The calculated boundingBox
     */
    _updateWorldBox(boxCollider: any, out: BoundingBox): void;
    /**
     * Get the sphere info of the given sphere collider in world space.
     * @param sphereCollider - The given sphere collider
     */
    _getWorldSphere(sphereCollider: any): {
        radius: any;
        center: Vector3;
    };
    /**
     * Collider and another collider do collision detection.
     * @param other - The another collider to collision detection
     */
    _boxCollision(other: any): boolean;
    /**
     * Collider and another collider do collision detection.
     * @param other - The another collider to collision detection
     */
    _sphereCollision(other: any): boolean;
    onAwake(): void;
}
