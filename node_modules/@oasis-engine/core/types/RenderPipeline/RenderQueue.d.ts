import { Camera } from "../Camera";
import { Engine } from "../Engine";
import { Layer } from "../Layer";
import { Material } from "../material/Material";
import { RenderElement } from "./RenderElement";
import { SpriteElement } from "./SpriteElement";
declare type Item = RenderElement | SpriteElement;
/**
 * Render queue.
 */
export declare class RenderQueue {
    readonly items: Item[];
    private _spriteBatcher;
    constructor(engine: Engine);
    /**
     * Push a render element.
     */
    pushPrimitive(element: RenderElement | SpriteElement): void;
    render(camera: Camera, replaceMaterial: Material, mask: Layer): void;
    /**
     * Clear collection.
     */
    clear(): void;
    /**
     * Destroy internal resources.
     */
    destroy(): void;
    /**
     * Sort the elements.
     */
    sort(compareFunc: Function): void;
    /**
     * @remarks
     * Modified based on v8.
     * https://github.com/v8/v8/blob/7.2-lkgr/src/js/array.js
     */
    private _quickSort;
    private _insertionSort;
}
export {};
