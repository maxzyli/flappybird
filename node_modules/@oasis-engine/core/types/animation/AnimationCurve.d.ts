import { InterpolationType } from "./enums/InterpolationType";
import { InterpolableValue, UnionInterpolableKeyframe } from "./KeyFrame";
/**
 * Store a collection of Keyframes that can be evaluated over time.
 */
export declare class AnimationCurve {
    /** All keys defined in the animation curve. */
    keys: UnionInterpolableKeyframe[];
    /** The interpolationType of the animation curve. */
    interpolation: InterpolationType;
    private _currentValue;
    private _length;
    private _currentIndex;
    /**
     * Animation curve length in seconds.
     */
    get length(): number;
    /**
     * Add a new key to the curve.
     * @param key - The keyframe
     */
    addKey(key: UnionInterpolableKeyframe): void;
    /**
     * Evaluate the curve at time.
     * @param time - The time within the curve you want to evaluate
     */
    evaluate(time: number): InterpolableValue;
    /**
     * Removes the keyframe at index and inserts key.
     * @param index - The index of the key to move
     * @param key - The key to insert
     */
    moveKey(index: number, key: UnionInterpolableKeyframe): void;
    /**
     * Removes a key.
     * @param index - The index of the key to remove
     */
    removeKey(index: number): void;
    private _evaluateLinear;
    private _evaluateStep;
    private _evaluateHermite;
}
