import { Color, Vector4 } from "@oasis-engine/math";
import { Engine } from "../Engine";
import { Texture2D } from "../texture/Texture2D";
import { BaseMaterial } from "./BaseMaterial";
/**
 * PBR (Physically-Based Rendering) Material.
 */
export declare abstract class PBRBaseMaterial extends BaseMaterial {
    private static _baseColorProp;
    private static _emissiveColorProp;
    private static _tilingOffsetProp;
    private static _baseTextureProp;
    private static _normalTextureProp;
    private static _normalTextureIntensityProp;
    private static _occlusionTextureIntensityProp;
    private static _emissiveTextureProp;
    private static _occlusionTextureProp;
    /**
     * Base color.
     */
    get baseColor(): Color;
    set baseColor(value: Color);
    /**
     * Base texture.
     */
    get baseTexture(): Texture2D;
    set baseTexture(value: Texture2D);
    /**
     * Normal texture.
     */
    get normalTexture(): Texture2D;
    set normalTexture(value: Texture2D);
    /**
     * Normal texture intensity.
     */
    get normalTextureIntensity(): number;
    set normalTextureIntensity(value: number);
    /**
     * Emissive color.
     */
    get emissiveColor(): Color;
    set emissiveColor(value: Color);
    /**
     * Emissive texture.
     */
    get emissiveTexture(): Texture2D;
    set emissiveTexture(value: Texture2D);
    /**
     * Occlusion texture.
     */
    get occlusionTexture(): Texture2D;
    set occlusionTexture(value: Texture2D);
    /**
     * Occlusion texture intensity.
     */
    get occlusionTextureIntensity(): number;
    set occlusionTextureIntensity(value: number);
    /**
     * Tiling and offset of main textures.
     */
    get tilingOffset(): Vector4;
    set tilingOffset(value: Vector4);
    /**
     * Create a pbr base material instance.
     * @param engine - Engine to which the material belongs
     */
    protected constructor(engine: Engine);
}
