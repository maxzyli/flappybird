import { Camera } from "../../Camera";
import { Renderer } from "../../Renderer";
import { Sprite } from "./Sprite";
/**
 * A component for masking Sprites.
 */
export declare class SpriteMask extends Renderer {
    private static _tempVec3;
    private _positions;
    private _isSpriteDirty;
    private _worldMatrixDirtyFlag;
    private _sprite;
    private _alphaCutoff;
    /** The mask layers the sprite mask influence to. */
    influenceLayers: number;
    /**
     * The Sprite used to define the mask.
     */
    get sprite(): Sprite;
    set sprite(value: Sprite);
    /**
     * The minimum alpha value used by the mask to select the area of influence defined over the mask's sprite. Value between 0 and 1.
     */
    get alphaCutoff(): number;
    set alphaCutoff(value: number);
    /**
     * @override
     * @inheritdoc
     */
    _onDestroy(): void;
    /**
     * @override
     * @inheritdoc
     */
    _render(camera: Camera): void;
}
