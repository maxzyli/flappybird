import { Ray } from "@oasis-engine/math";
import { Layer } from "./Layer";
import { HitResult } from "./HitResult";
export declare class PhysicsManager {
    private static _currentHit;
    private _engine;
    /**
     * Casts a ray through the Scene and returns the first hit.
     * @param ray - The ray
     * @returns Returns true if the ray intersects with a Collider, otherwise false.
     */
    raycast(ray: Ray): Boolean;
    /**
     * Casts a ray through the Scene and returns the first hit.
     * @param ray - The ray
     * @param outHitResult - If true is returned, outHitResult will contain more detailed collision information
     * @returns Returns true if the ray intersects with a Collider, otherwise false.
     */
    raycast(ray: Ray, outHitResult: HitResult): Boolean;
    /**
     * Casts a ray through the Scene and returns the first hit.
     * @param ray - The ray
     * @param distance - The max distance the ray should check
     * @returns Returns true if the ray intersects with a Collider, otherwise false.
     */
    raycast(ray: Ray, distance: number): Boolean;
    /**
     * Casts a ray through the Scene and returns the first hit.
     * @param ray - The ray
     * @param distance - The max distance the ray should check
     * @param outHitResult - If true is returned, outHitResult will contain more detailed collision information
     * @returns Returns true if the ray intersects with a Collider, otherwise false.
     */
    raycast(ray: Ray, distance: number, outHitResult: HitResult): Boolean;
    /**
     * Casts a ray through the Scene and returns the first hit.
     * @param ray - The ray
     * @param distance - The max distance the ray should check
     * @param layerMask - Layer mask that is used to selectively ignore Colliders when casting
     * @returns Returns true if the ray intersects with a Collider, otherwise false.
     */
    raycast(ray: Ray, distance: number, layerMask: Layer): Boolean;
    /**
     * Casts a ray through the Scene and returns the first hit.
     * @param ray - The ray
     * @param distance - The max distance the ray should check
     * @param layerMask - Layer mask that is used to selectively ignore Colliders when casting
     * @param outHitResult - If true is returned, outHitResult will contain more detailed collision information
     * @returns Returns true if the ray intersects with a Collider, otherwise false.
     */
    raycast(ray: Ray, distance: number, layerMask: Layer, outHitResult: HitResult): Boolean;
}
