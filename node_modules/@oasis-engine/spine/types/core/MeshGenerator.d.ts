import { Engine, Entity, SubMesh } from 'oasis-engine';
import { Skeleton } from '../spine-core/Skeleton';
import { SkeletonData } from '../spine-core/SkeletonData';
import { Color } from '../spine-core/Utils';
import { SpineRenderSetting } from '../types';
declare type SubMeshItem = {
    subMesh: SubMesh;
    name: string;
};
export declare class MeshGenerator {
    static QUAD_TRIANGLES: number[];
    static VERTEX_SIZE: number;
    static VERTEX_STRIDE: number;
    static tempColor: Color;
    private _setting;
    private _engine;
    private _entity;
    private _clipper;
    private _spineMesh;
    private _vertexCount;
    private _vertices;
    private _verticesWithZ;
    private _indices;
    private _needResize;
    private _meshRenderer;
    private _subMeshItems;
    readonly separateSlots: string[];
    get mesh(): import("oasis-engine").BufferMesh;
    get subMeshItems(): SubMeshItem[];
    constructor(engine: Engine, entity: Entity);
    initialize(skeletonData: SkeletonData, setting?: SpineRenderSetting): void;
    buildMesh(skeleton: Skeleton): void;
    addSeparateSlot(slotName: string): void;
    private _prepareBufferData;
}
export {};
