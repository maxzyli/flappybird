{
  "version": 3,
  "sources": ["../@oasis-engine/touch/dist/index.module.js"],
  "sourcesContent": ["import { HitResult, Vector2, Ray, ACollider, Component } from 'oasis-engine';\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar TouchManager = /*#__PURE__*/function () {\n  function TouchManager() {\n    var _this = this;\n\n    this.CanvasEvent = {\n      touchend: \"touchend\",\n      touchstart: \"touchstart\",\n      mouseup: \"mouseup\",\n      mousedown: \"mousedown\",\n      click: \"click\"\n    };\n    this.nowListenHash = void 0;\n    this.webCanvas = void 0;\n    this.tempVPVec = void 0;\n    this.tempCameraVPVec = void 0;\n    this.tempRay = void 0;\n    this.tempHit = void 0;\n    this.listenerState = 0;\n    this.engine = void 0;\n\n    this.touchToVPPos = function (touchEvt, pos) {\n      var _touchEvt$changedTouc = touchEvt.changedTouches,\n          changedTouches = _touchEvt$changedTouc === void 0 ? [] : _touchEvt$changedTouc,\n          target = touchEvt.target;\n\n      if (changedTouches.length > 0) {\n        // @ts-ignore\n        var _ref = target && target.getBoundingClientRect(),\n            _ref$left = _ref.left,\n            left = _ref$left === void 0 ? 0 : _ref$left,\n            _ref$top = _ref.top,\n            top = _ref$top === void 0 ? 0 : _ref$top;\n\n        var touchPos = changedTouches[0];\n        var webCanvas = _this.webCanvas;\n        pos.setValue((touchPos.clientX - left) / webCanvas.clientWidth, (touchPos.clientY - top) / webCanvas.clientHeight);\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.mouseToVPPos = function (mouseEvt, pos) {\n      var pageX = mouseEvt.pageX,\n          pageY = mouseEvt.pageY,\n          target = mouseEvt.target;\n\n      if (target) {\n        // @ts-ignore\n        var _target$offsetLeft = target.offsetLeft,\n            offsetLeft = _target$offsetLeft === void 0 ? 0 : _target$offsetLeft,\n            _target$offsetTop = target.offsetTop,\n            offsetTop = _target$offsetTop === void 0 ? 0 : _target$offsetTop;\n        var webCanvas = _this.webCanvas;\n        pos.setValue((pageX - offsetLeft) / webCanvas.clientWidth, (pageY - offsetTop) / webCanvas.clientHeight);\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.pointToRay = function (camera, pos) {\n      var tempVPVec = _this.tempVPVec,\n          tempRay = _this.tempRay;\n      var viewport = camera.viewport;\n      pos.setValue((tempVPVec.x - viewport.x) / viewport.z, (tempVPVec.y - viewport.y) / viewport.w);\n\n      if (pos.x >= 0 && pos.x <= 1 && pos.y >= 0 && pos.y <= 1) {\n        camera.viewportPointToRay(pos, tempRay);\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.checkHit = function (touchType, evt) {\n      if (!_this.engine) {\n        console.warn(\"Please call the TouchManager.init method to initialize before use\");\n      } // \u6839\u636E\u89E6\u6478\u70B9\u83B7\u53D6\u771F\u5B9E\u7684 clientpos\n\n\n      var scene = _this.engine.sceneManager.activeScene; // @ts-ignore\n\n      var actCameras = scene._activeCameras; // \u5BF9\u6D3B\u52A8\u7684\u76F8\u673A\u7684\u4F18\u5148\u7EA7\u8FDB\u884C\u4E00\u4E2A\u6392\u5E8F\uFF0C\n\n      actCameras.sort(function (camera1, camera2) {\n        return camera1.priority - camera2.priority;\n      });\n      var tempCameraVPVec = _this.tempCameraVPVec,\n          tempRay = _this.tempRay; // \u904D\u5386\u6D3B\u52A8\u7740\u7684\u76F8\u673A\uFF0C\u5148\u68C0\u67E5\u540E\u6E32\u67D3\u7684\n\n      for (var index = actCameras.length - 1; index >= 0; index--) {\n        var tempCamera = actCameras[index]; // \u8FD9\u4E2A\u76F8\u673A\u662F\u6D3B\u52A8\u7740\u7684 \u5E76\u4E14\u70B9\u51FB\u533A\u57DF\u5728\u8FD9\u4E2A\u76F8\u673A\u7684 viewPort \u4E2D\n\n        if (tempCamera.enabled && _this.pointToRay(tempCamera, tempCameraVPVec)) {\n          // \u5F53\u524D touch \u4E8B\u4EF6\u5BF9\u5E94\u7684 entity\n          var colliderList = _this.nowListenHash[touchType]; // \u53EA\u68C0\u67E5\u76D1\u542C\u4E86\u8FD9\u4E2A\u4E8B\u4EF6\u7684\u78B0\u649E\u4F53\n\n          var collider = _this.hitCollider(tempRay, colliderList);\n\n          if (collider) {\n            // @ts-ignore\n            var cbListHash = collider.touchCBListHash;\n            var cbList = cbListHash ? cbListHash[touchType] : null;\n            var cbLen = cbList ? cbList.length : 0;\n\n            if (cbLen > 0) {\n              for (var i = 0; i < cbLen; i++) {\n                cbList[i](evt);\n              }\n            }\n          }\n\n          break;\n        }\n      }\n    };\n\n    this.updateListener = function (optType, touchType) {\n      var preState = (_this.listenerState & touchType) !== 0;\n\n      if (preState && optType == OptType.Add) {\n        //\u5DF2\u7ECF\u76D1\u542C\uFF0C\u6B64\u65F6\u518D\u589E\u52A0\u5219\u65E0\u9700\u6539\u53D8\n        return;\n      }\n\n      if (!preState && optType == OptType.Del) {\n        //\u6CA1\u6709\u76D1\u542C\uFF0C\u6B64\u65F6\u518D\u79FB\u9664\u4E5F\u65E0\u9700\u6539\u53D8\n        return;\n      }\n\n      var CanvasEvent = _this.CanvasEvent,\n          webCanvas = _this.webCanvas;\n\n      switch (optType) {\n        case OptType.Add:\n          switch (touchType) {\n            case TouchType.MouseDown:\n              webCanvas.addEventListener(CanvasEvent.mousedown, _this.onMouseDown);\n              webCanvas.addEventListener(CanvasEvent.touchstart, _this.onTouchStart);\n              break;\n\n            case TouchType.MouseUp:\n              webCanvas.addEventListener(CanvasEvent.mouseup, _this.onMouseUp);\n              webCanvas.addEventListener(CanvasEvent.touchend, _this.onTouchEnd);\n              break;\n          }\n\n          _this.listenerState |= touchType;\n          break;\n\n        case OptType.Del:\n          // \u5224\u65AD\u662F\u5426\u9700\u8981\u76D1\u542C\n          if (_this.checkNeedListen(touchType) != preState) {\n            switch (touchType) {\n              case TouchType.MouseDown:\n                webCanvas.removeEventListener(CanvasEvent.mousedown, _this.onMouseDown);\n                webCanvas.removeEventListener(CanvasEvent.touchstart, _this.onTouchStart);\n                break;\n\n              case TouchType.MouseUp:\n                webCanvas.removeEventListener(CanvasEvent.mouseup, _this.onMouseUp);\n                webCanvas.removeEventListener(CanvasEvent.touchend, _this.onTouchEnd);\n                break;\n            }\n\n            _this.listenerState &= ~touchType;\n          }\n\n          break;\n      }\n    };\n\n    this.checkNeedListen = function (touchType) {\n      var colliderList = _this.nowListenHash[touchType];\n      return colliderList && colliderList.length > 0;\n    };\n\n    this.onMouseDown = function (mouseEvt) {\n      if (mouseEvt && _this.mouseToVPPos(mouseEvt, _this.tempVPVec)) {\n        _this.checkHit(TouchType.MouseDown, mouseEvt);\n      }\n    };\n\n    this.onTouchStart = function (touchEvt) {\n      if (touchEvt && _this.touchToVPPos(touchEvt, _this.tempVPVec)) {\n        _this.checkHit(TouchType.MouseDown, touchEvt);\n      }\n    };\n\n    this.onMouseUp = function (mouseEvt) {\n      if (mouseEvt && _this.mouseToVPPos(mouseEvt, _this.tempVPVec)) {\n        _this.checkHit(TouchType.MouseUp, mouseEvt);\n      }\n    };\n\n    this.onTouchEnd = function (touchEvt) {\n      if (touchEvt && _this.touchToVPPos(touchEvt, _this.tempVPVec)) {\n        _this.checkHit(TouchType.MouseUp, touchEvt);\n      }\n    };\n\n    this.nowListenHash = {};\n    this.tempVPVec = new Vector2();\n    this.tempCameraVPVec = new Vector2();\n    this.tempRay = new Ray();\n    this.tempHit = new HitResult();\n  }\n\n  var _proto = TouchManager.prototype;\n\n  _proto.initEngine = function initEngine(engine) {\n    // \u5F53\u524D\u7684 engine\n    if (this.engine != engine) {\n      this.engine = engine; // @ts-ignore\n\n      this.webCanvas = this.engine.canvas._webCanvas;\n    }\n  };\n\n  _proto.addTouch = function addTouch(type, collider) {\n    var nowListenHash = this.nowListenHash;\n\n    if (nowListenHash[type]) {\n      var index = nowListenHash[type].indexOf(collider);\n\n      if (index < 0) {\n        nowListenHash[type].push(collider);\n      }\n    } else {\n      nowListenHash[type] = [collider];\n    }\n\n    this.updateListener(OptType.Add, type);\n  };\n\n  _proto.removeTouch = function removeTouch(type, collider) {\n    var colliderList = this.nowListenHash[type];\n\n    if (colliderList) {\n      var index = colliderList.indexOf(collider);\n\n      if (index >= 0) {\n        colliderList.splice(index, 1);\n      }\n    }\n\n    this.updateListener(OptType.Del, type);\n  } // \u89E6\u6478\u65F6\u5C06\u5C4F\u5E55\u4E0A\u70B9\u8F6C\u6362\u4E3A viewport \u4E0A\u7684\u70B9\n  ;\n\n  _proto.hitCollider = function hitCollider(ray, colliders) {\n    var nearestHit = new HitResult();\n    nearestHit.distance = Number.MAX_VALUE;\n    var hit = this.tempHit;\n\n    for (var i = 0, len = colliders.length; i < len; i++) {\n      var collider = colliders[i];\n\n      if (!collider.entity.isActiveInHierarchy) {\n        continue;\n      } // @ts-ignore\n\n\n      if (collider._raycast(ray, hit)) {\n        if (hit.distance < nearestHit.distance) {\n          nearestHit = hit;\n        }\n      }\n    }\n\n    return nearestHit.collider;\n  } // \u53EA\u66F4\u65B0\u6709\u5DEE\u5F02\u7684 canvas \u76D1\u542C\n  ;\n\n  _createClass(TouchManager, null, [{\n    key: \"ins\",\n    get: function get() {\n      if (!this._ins) {\n        this._ins = new TouchManager();\n      }\n\n      return this._ins;\n    }\n  }]);\n\n  return TouchManager;\n}();\nTouchManager._ins = void 0;\nvar OptType;\n\n(function (OptType) {\n  OptType[OptType[\"Add\"] = 0] = \"Add\";\n  OptType[OptType[\"Del\"] = 1] = \"Del\";\n})(OptType || (OptType = {}));\n\nvar TouchType;\n\n(function (TouchType) {\n  TouchType[TouchType[\"MouseDown\"] = 1] = \"MouseDown\";\n  TouchType[TouchType[\"MouseUp\"] = 2] = \"MouseUp\";\n  TouchType[TouchType[\"Click\"] = 4] = \"Click\";\n})(TouchType || (TouchType = {}));\n\nvar Touch = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Touch, _Component);\n\n  function Touch(entity) {\n    var _this;\n\n    _this = _Component.call(this, entity) || this;\n    _this.collider = void 0;\n    _this.collider = _this.entity.getComponent(ACollider);\n\n    if (_this.collider) {\n      // @ts-ignore\n      _this.collider.touchCBListHash = {};\n    } else {\n      console.warn(\"Please set the collider first\");\n    }\n\n    return _this;\n  } // Add listener\n\n\n  var _proto = Touch.prototype;\n\n  _proto.on = function on(type, cbFun) {\n    // @ts-ignore\n    var touchCBListHash = this.collider.touchCBListHash;\n\n    if (!touchCBListHash[type]) {\n      touchCBListHash[type] = [];\n    }\n\n    var cbList = touchCBListHash[type];\n\n    if (cbList.indexOf(cbFun) < 0) {\n      cbList.push(cbFun);\n      TouchManager.ins.addTouch(type, this.collider);\n    }\n  } // Remove listener\n  ;\n\n  _proto.off = function off(type, cbFun) {\n    // @ts-ignore\n    var cbList = this.collider.touchCBListHash[type];\n\n    if (cbFun) {\n      var index = cbList ? cbList.indexOf(cbFun) : -1;\n\n      if (index >= 0) {\n        cbList.splice(index, 1);\n        TouchManager.ins.removeTouch(type, this.collider);\n      }\n    } else {\n      cbList && (cbList.length = 0);\n    }\n  };\n\n  return Touch;\n}(Component);\n\nexport { Touch, TouchManager, TouchType };\n"],
  "mappings": "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",
  "names": []
}
